{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Husametdin\\\\kocaoglu\\\\fe\\\\src\\\\container\\\\App.js\";\nimport React from \"react\";\nimport AdminHomePage from \"../admin/page/AdminHomePage\";\nimport LoginPage from \"../admin/page/LoginPage\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport TopBar from \"../admin/component/TopBar\";\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  // static contextType = Authentication;\n  render() {\n    const {\n      isLoggedIn\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(TopBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: AdminHomePage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), !isLoggedIn && /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            component: LoginPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = store => {\n  return {\n    isLoggedIn: store.isLoggedIn\n  };\n};\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["D:/Users/Husametdin/kocaoglu/fe/src/container/App.js"],"names":["React","AdminHomePage","LoginPage","BrowserRouter","Router","Route","Redirect","Switch","TopBar","connect","App","Component","render","isLoggedIn","props","mapStateToProps","store"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,QAAzC,EAAmDC,MAAnD,QAAiE,kBAAjE;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,GAAN,SAAkBV,KAAK,CAACW,SAAxB,CAAkC;AAChC;AACAC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAiB,KAAKC,KAA5B;AACA,wBACE;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,GAAlB;AAAsB,YAAA,SAAS,EAAEb;AAAjC;AAAA;AAAA;AAAA;AAAA,kBADF,EAEG,CAACY,UAAD,iBAAe,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,SAAS,EAAEX;AAAhC;AAAA;AAAA;AAAA;AAAA,kBAFlB,eAGE,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAhB+B;;AAmBlC,MAAMa,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLH,IAAAA,UAAU,EAAEG,KAAK,CAACH;AADb,GAAP;AAGD,CAJD;;AAMA,eAAeJ,OAAO,CAACM,eAAD,CAAP,CAAyBL,GAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport AdminHomePage from \"../admin/page/AdminHomePage\";\nimport LoginPage from \"../admin/page/LoginPage\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport TopBar from \"../admin/component/TopBar\"; \nimport { connect } from 'react-redux';\n\nclass App extends React.Component {\n  // static contextType = Authentication;\n  render() {\n    const { isLoggedIn } = this.props;\n    return (\n      <div>\n        <Router>\n          <TopBar />\n          <Switch>\n            <Route exact path=\"/\" component={AdminHomePage} />\n            {!isLoggedIn && <Route path=\"/login\" component={LoginPage} />}  \n            <Redirect to=\"/\" />\n          </Switch>\n        </Router> \n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = store => {\n  return {\n    isLoggedIn: store.isLoggedIn\n  };\n};\n\nexport default connect(mapStateToProps)(App);"]},"metadata":{},"sourceType":"module"}