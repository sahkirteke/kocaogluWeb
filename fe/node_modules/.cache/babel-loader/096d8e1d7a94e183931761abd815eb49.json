{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport authReducer from './authReducer';\nimport SecureLS from 'secure-ls';\nconst secureLs = new SecureLS();\n\nconst getStateFromStorage = () => {\n  const hoaxAuth = secureLs.get('hoax-auth');\n  let stateInLocalStorage = {\n    isLoggedIn: false,\n    username: undefined,\n    password: undefined\n  };\n\n  if (hoaxAuth) {\n    return hoaxAuth;\n  }\n\n  return stateInLocalStorage;\n};\n\nconst updateStateInStorage = newState => {\n  secureLs.set('kocaOglu-auth', newState);\n};\n\nconst configureStore = () => {\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const store = createStore(authReducer, getStateFromStorage(), composeEnhancers(applyMiddleware(thunk)));\n  store.subscribe(() => {\n    updateStateInStorage(store.getState());\n  });\n  return store;\n};\n\nexport default configureStore;","map":{"version":3,"sources":["D:/Users/Husametdin/kocaoglu/fe/src/admin/redux/configureStore.js"],"names":["createStore","applyMiddleware","compose","thunk","authReducer","SecureLS","secureLs","getStateFromStorage","hoaxAuth","get","stateInLocalStorage","isLoggedIn","username","undefined","password","updateStateInStorage","newState","set","configureStore","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","subscribe","getState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,MAAMC,QAAQ,GAAG,IAAID,QAAJ,EAAjB;;AAEA,MAAME,mBAAmB,GAAG,MAAM;AAChC,QAAMC,QAAQ,GAAGF,QAAQ,CAACG,GAAT,CAAa,WAAb,CAAjB;AAEA,MAAIC,mBAAmB,GAAG;AACxBC,IAAAA,UAAU,EAAE,KADY;AAExBC,IAAAA,QAAQ,EAAEC,SAFc;AAGxBC,IAAAA,QAAQ,EAAED;AAHc,GAA1B;;AAMA,MAAIL,QAAJ,EAAc;AACZ,WAAOA,QAAP;AACD;;AACD,SAAOE,mBAAP;AACD,CAbD;;AAeA,MAAMK,oBAAoB,GAAGC,QAAQ,IAAI;AACvCV,EAAAA,QAAQ,CAACW,GAAT,CAAa,eAAb,EAA8BD,QAA9B;AACD,CAFD;;AAIA,MAAME,cAAc,GAAG,MAAM;AAC3B,QAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CnB,OAAxE;AACA,QAAMoB,KAAK,GAAGtB,WAAW,CAACI,WAAD,EAAcG,mBAAmB,EAAjC,EAAqCY,gBAAgB,CAAClB,eAAe,CAACE,KAAD,CAAhB,CAArD,CAAzB;AAEAmB,EAAAA,KAAK,CAACC,SAAN,CAAgB,MAAM;AACpBR,IAAAA,oBAAoB,CAACO,KAAK,CAACE,QAAN,EAAD,CAApB;AACD,GAFD;AAIA,SAAOF,KAAP;AACD,CATD;;AAWA,eAAeJ,cAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport authReducer from './authReducer';\r\nimport SecureLS from 'secure-ls';\r\n\r\nconst secureLs = new SecureLS();\r\n\r\nconst getStateFromStorage = () => {\r\n  const hoaxAuth = secureLs.get('hoax-auth');\r\n\r\n  let stateInLocalStorage = {\r\n    isLoggedIn: false,\r\n    username: undefined, \r\n    password: undefined\r\n  };\r\n\r\n  if (hoaxAuth) {\r\n    return hoaxAuth;\r\n  }\r\n  return stateInLocalStorage;\r\n};\r\n\r\nconst updateStateInStorage = newState => {\r\n  secureLs.set('kocaOglu-auth', newState);\r\n};\r\n\r\nconst configureStore = () => {\r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(authReducer, getStateFromStorage(), composeEnhancers(applyMiddleware(thunk)));\r\n\r\n  store.subscribe(() => {\r\n    updateStateInStorage(store.getState());\r\n  });\r\n\r\n  return store;\r\n};\r\n\r\nexport default configureStore;"]},"metadata":{},"sourceType":"module"}