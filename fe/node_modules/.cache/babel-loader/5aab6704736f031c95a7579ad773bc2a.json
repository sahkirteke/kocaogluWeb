{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Husametdin\\\\kocaoglu\\\\fe\\\\src\\\\container\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport AdminHomePage from \"../admin/page/AdminHomePage\";\nimport LoginPage from \"../admin/page/LoginPage\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport TopBar from \"../admin/component/TopBar\";\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const {\n    isLoggedIn\n  } = useSelector(store => ({\n    isLoggedIn: store.isLoggedIn\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(TopBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [isLoggedIn ? /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/adminPanel\",\n          component: AdminHomePage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          component: LoginPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 90\n        }, this), !isLoggedIn && /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          component: LoginPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"877P/f/MnA4yuj3K53yr4WjuRPQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Users/Husametdin/kocaoglu/fe/src/container/App.js"],"names":["React","AdminHomePage","LoginPage","BrowserRouter","Router","Route","Redirect","Switch","TopBar","useSelector","App","isLoggedIn","store"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,QAAzC,EAAmDC,MAAnD,QAAiE,kBAAjE;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AACA,MAAMC,GAAG,GAAI,MAAM;AAAA;;AACjB,QAAM;AAAEC,IAAAA;AAAF,MAAiBF,WAAW,CAACG,KAAK,KAAK;AAC3CD,IAAAA,UAAU,EAAEC,KAAK,CAACD;AADyB,GAAL,CAAN,CAAlC;AAKE,sBACE;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA,mBACGA,UAAU,gBAAG,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,aAAlB;AAAgC,UAAA,SAAS,EAAEV;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAAkE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,SAAS,EAAEC;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAD/E,EAEG,CAACS,UAAD,iBAAe,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,SAAS,EAAET;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAFlB,eAGE,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcH,CApBD;;GAAMQ,G;UACmBD,W;;;KADnBC,G;AAwBN,eAAgBA,GAAhB","sourcesContent":["import React from \"react\";\nimport AdminHomePage from \"../admin/page/AdminHomePage\";\nimport LoginPage from \"../admin/page/LoginPage\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport TopBar from \"../admin/component/TopBar\";  \nimport { useSelector } from 'react-redux';\nconst App  = () => { \n  const { isLoggedIn } = useSelector(store => ({\n    isLoggedIn: store.isLoggedIn\n  }));\n\n    \n    return (\n      <div>\n        <Router>\n          <TopBar />\n          <Switch>\n            {isLoggedIn ? <Route exact path=\"/adminPanel\" component={AdminHomePage} /> : <Route path=\"/login\" component={LoginPage}/> }\n            {!isLoggedIn && <Route path=\"/login\" component={LoginPage} />}  \n            <Redirect to=\"/\" />\n          </Switch>\n        \n        </Router> \n      </div>\n    );\n  \n}\n\n \n\nexport default  App;"]},"metadata":{},"sourceType":"module"}